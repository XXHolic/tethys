{"root":{"data":{"id":"69f324fd732b","created":1562809670,"text":"Class"},"children":[{"data":{"id":"bvg1tvx7d0g0","created":1562809776373,"text":"new","note":"- 类必须使用new调用，否则会报错。\n"},"children":[]},{"data":{"id":"bvg1vz466l40","created":1562809940052,"text":"严格模式","note":"- 类和模块的内部，默认就是严格模式，所以不需要使用use strict指定运行模式。"},"children":[]},{"data":{"id":"bvg1wh0nzyw0","created":1562809979022,"text":"提升","note":"- 不存在提升，这种规定的原因与下文要提到的继承有关，必须保证子类在父类之后定义。"},"children":[]},{"data":{"id":"bvg1x0imuhs0","created":1562810021467,"text":"name ","note":"- name属性总是返回紧跟在class关键字后面的类名。\n\n```javascript\nclass Point {}\nPoint.name // \"Point\"\n```"},"children":[]},{"data":{"id":"bvg1xt9yo5c0","created":1562810084070,"text":"this","note":"- 类的方法内部如果含有this，它默认指向类的实例。"},"children":[]},{"data":{"id":"bvg1yhr9z2w0","created":1562810137359,"text":"静态方法","note":"- 类相当于实例的原型，所有在类中定义的方法，都会被实例继承。如果在一个方法前，加上static关键字，就表示该方法不会被实例继承，而是直接通过类来调用，这就称为“静态方法”。"},"children":[]},{"data":{"id":"bvg28ysik6o0","created":1562810958081,"text":"静态属性","note":"- 静态属性指的是 Class 本身的属性，即Class.propName，而不是定义在实例对象（this）上的属性。"},"children":[]}]},"template":"right","theme":"fresh-blue","version":"1.4.43"}