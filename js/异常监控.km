{"root":{"data":{"id":"4afe343988fb","created":1565485434,"text":"异常监控","note":"- 文章： https://blog.fundebug.com/2018/12/07/how-to-handle-frontend-error/"},"children":[{"data":{"id":"bw6iwrgi8hk0","created":1565498519489,"text":"目的","note":"- 增强用户体验；\n- 远程定位问题；\n- 未雨绸缪，及早发现问题；\n- 无法复线问题，尤其是移动端，机型，系统都是问题；\n- 完善的前端方案，前端监控系统；"},"children":[]},{"data":{"id":"bw6iwtrmza80","created":1565498524516,"text":"错误类型"},"children":[{"data":{"id":"bw6iymqrfxc0","created":1565498665954,"text":"语法"},"children":[]},{"data":{"id":"bw6iyo8fu940","created":1565498669199,"text":"ajax 请求"},"children":[]},{"data":{"id":"bw6iyw8jswg0","created":1565498686620,"text":"promise"},"children":[]},{"data":{"id":"bw6iz3ayxug0","created":1565498702004,"text":"跨域"},"children":[]},{"data":{"id":"bw6iz4cv0tc0","created":1565498704295,"text":"静态资源加载"},"children":[]},{"data":{"id":"bw6izie0mvc0","created":1565498734840,"text":"iframe"},"children":[]},{"data":{"id":"bw6izypqum80","created":1565498770378,"text":"崩溃和卡顿"},"children":[]}]},{"data":{"id":"bw6ixl7b5xc0","created":1565498584237,"text":"捕捉方式"},"children":[{"data":{"id":"bw6j0clwlso0","created":1565498800621,"text":"try-catch","note":"- 只能捕获到同步的运行时错误，对语法和异步错误却无能为力，捕获不到。\n- 适合用来在可预见情况下监控特定的错误"},"children":[]},{"data":{"id":"bw6j0yi09000","created":1565498848274,"text":"window.onerror","note":"-  主要是来捕获预料之外的错误\n- 最好写在所有 JS 脚本的前面，否则有可能捕获不到错误；\n- window.onerror 函数只有在返回 true 的时候，异常才不会向上抛出，否则即使是知道异常的发生控制台还是会显示 \n- 适用于 iframe 错误"},"children":[]},{"data":{"id":"bw6j14xke6g0","created":1565498862276,"text":"window.addEventListener","note":"- 适合静态资源监听\n```js\nwindow.addEventListener('error', (error) => {\n    console.log('捕获到异常：', error);\n}, true)\n```\n\n- 无法判断 HTTP 的状态是 404 还是其他比如 500 等等，所以还需要配合服务端日志才进行排查分析才可以。"},"children":[]},{"data":{"id":"bw6j1b0ivxs0","created":1565498875515,"text":"Promise Catch","note":"- 为了防止有漏掉的 Promise 异常，建议在全局增加一个对 unhandledrejection 的监听，用来全局监听Uncaught Promise Error。\n- 当Promise 被reject并且没有得到处理的时候，会触发unhandledrejection事件。"},"children":[]},{"data":{"id":"bw6j1zbzqc80","created":1565498928451,"text":"load、beforeunload","note":"- 用于卡顿和崩溃， 卡顿也就是网页暂时响应比较慢， JS 可能无法及时执行。但崩溃就不一样了，网页都崩溃了，JS 都不运行了\n- https://juejin.im/entry/5be158116fb9a049c6434f4a?utm_source=gold_browser_extension"},"children":[]},{"data":{"id":"bw6jcrrsamo0","created":1565499773998,"text":"Service Worker","note":"- 用于卡顿和崩溃，Service Worker 有自己独立的工作线程，与网页区分开，网页崩溃了，Service Worker 一般情况下不会崩溃；\n\n- https://juejin.im/entry/5be158116fb9a049c6434f4a?utm_source=gold_browser_extension"},"children":[]}]},{"data":{"id":"bw6j2e1uu200","created":1565498960490,"text":"上报方式","layout_right_offset":{"x":4,"y":220}},"children":[{"data":{"id":"bw6j4f8oqnc0","created":1565499119808,"text":"ajax","note":"- 也可能出现异常"},"children":[]},{"data":{"id":"bw6j4ge8rg80","created":1565499122321,"text":"image","note":"- 推荐\n- 上报量很大的时候，就需要根据实际情进行限制，比如每个多久才能上报一次"},"children":[]}]},{"data":{"id":"bw6j2ip58rk0","created":1565498970606,"text":"框架捕捉","layout_right_offset":{"x":11,"y":-58}},"children":[{"data":{"id":"bw6j33wwufk0","created":1565499016788,"text":"vue"},"children":[{"data":{"id":"bw6j3fxq10w0","created":1565499042958,"text":"Vue.config.errorHandler "},"children":[]}]},{"data":{"id":"bw6j3ifqm4o0","created":1565499048401,"text":"react"},"children":[{"data":{"id":"bw6j3mfn6qo0","created":1565499057102,"text":"componentDidCatch"},"children":[]},{"data":{"id":"bw6j3r0rk5c0","created":1565499067087,"text":"error boundary"},"children":[]}]}]}]},"template":"right","theme":"fresh-blue","version":"1.4.43"}