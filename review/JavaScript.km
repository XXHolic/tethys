{"root":{"data":{"id":"cb6a94d77e65","created":1559231372,"text":"JavaScript","image":"","imageTitle":"","imageSize":"","priority":null,"progress":null,"font-family":"comic sans ms","font-size":24},"children":[{"data":{"id":"bugthq5u8m80","created":1559231656101,"text":"基本类型","layout":null,"layout_mind_offset":{"x":1,"y":-77},"expandState":"expand","priority":1,"color":"#ff0000"},"children":[{"data":{"id":"buj1vlb7hqo0","created":1559458431432,"text":"String","priority":null,"color":"#ff0000"},"children":[]},{"data":{"id":"buj1vnvxp680","created":1559458437039,"text":"Number","expandState":"expand","color":"#ff0000"},"children":[{"data":{"id":"buj22ngjiiw0","created":1559458984657,"text":"NaN","note":"1. 数值中只有 0 除以 0 会返回NaN\n\n2. 任何涉及 NaN 的操作（例如NaN/10）都会返回NaN\n\n3. NaN 与任何值都不相等，包括NaN 本身\n\n4. isNaN() 方法，注意空字符串会返回 false，跟测试数字返回值一样","color":"#ff0000"},"children":[]},{"data":{"id":"buj27ohakr40","created":1559459378700,"text":"类型转换","note":"1. Numbert(null) 返回值是 0\n\n2. Numbert(undefined) 返回值是 NaN","color":"#ff0000"},"children":[]}]},{"data":{"id":"buj1vq1ss7k0","created":1559458441747,"text":"Boolean","color":"#ff0000"},"children":[]},{"data":{"id":"buj1vte33340","created":1559458449020,"text":"Object","color":"#ff0000"},"children":[]},{"data":{"id":"buj1vxs73iw0","created":1559458458581,"text":"Undefined","note":"1. null === undefined 为 true，因为，undefined 值是派生自null 值的。\n\n","color":"#ff0000"},"children":[]},{"data":{"id":"buj1w1qzqyw0","created":1559458467215,"text":"Null","note":"1. 发音 [nʌl]\n\n2. typeof null 返回的值是 object","color":"#ff0000"},"children":[]},{"data":{"id":"buj1w5y2no80","created":1559458476350,"text":"Symbol","note":"1. symbol 类型的是独一无二的，可以来来防止属性名相同的冲突\n\n2. symbol 不能使用 new Symbol()\n\n3. Boolean() 转换为 true\n\n参考链接：http://es6.ruanyifeng.com/#docs/symbol","color":"#ff0000"},"children":[]}]},{"data":{"id":"bugthxt34uo0","created":1559231672744,"text":"作用域和内存","layout":null,"layout_mind_offset":{"x":0,"y":-83},"background":"#ffffff","color":"#548dd4","priority":2},"children":[{"data":{"id":"bugtkgqn2q00","created":1559231870683,"text":"作用域","layout":null,"note":"- 作用域是一套规则，用于确定在何处以及如何查找变量","background":"#ffffff","color":"#548dd4"},"children":[]},{"data":{"id":"bugtkljnphc0","created":1559231881145,"text":"垃圾回收","layout":null,"background":"#ffffff","color":"#548dd4"},"children":[{"data":{"id":"bujcdbjba600","created":1559488031808,"text":"标记清除","note":"- 垃圾收集器会给存储在内存中的所有变量都加上标记，它会去掉正在使用或被引用变量的标记。每隔一段时间就会“清理”那些带有标记的变量。","background":"#ffffff","color":"#548dd4"},"children":[]},{"data":{"id":"bujcdwporu80","created":1559488077906,"text":"引用计数","note":"- 跟踪记录每个值被引用的次数。当引用次数为 0 的就会被回收。\n\n- 这种方式有个严重的问题：相互引用。这样就永远回收不了。","background":"#ffffff","color":"#548dd4"},"children":[]}]},{"data":{"id":"bugtkqsvr2w0","created":1559231892586,"text":"内存泄漏","layout":null,"note":"- 使用的内存，一直没有得到释放，比较常见的就是变量的引用一直存在。\n\n- 相应的还有一个 “内存溢出” 概念：程序向系统申请一定大小的内存，而系统不能满足程序要求，于是产生了溢出。","background":"#ffffff","color":"#548dd4"},"children":[]}]},{"data":{"id":"bugtj950cu80","created":1559231775773,"text":"对象","layout":null,"layout_mind_offset":{"x":-28,"y":42},"priority":3},"children":[{"data":{"id":"bugtjm1pvrk0","created":1559231803873,"text":"原型链","layout":null,"note":"1. 原型链中的原型指的是 `Prototype` 属性。\n\n2. JavaScript 中的对象都有一个内置的 Prototype ，其实就是对象的引用。\n\n3. 当访问对象中的属性不存在时，就会查找对象内部 Prototype 关联的对象，这个关联关系就形成了一条原型链。Prototype 链最终都会指向内置的 Object.prototype 。\n\n4. 很常见的例子，就是模仿类，也就是常说的构造函数，用构造函数声明的对象，都是通过原型链相互关联起来，看起来像类一样，但其实有这本质的区别：**类是可以复制多次，就像模具一样，但   JavaScript 并没有类似的复制机制**"},"children":[]},{"data":{"id":"bugtl79j1r40","created":1559231928421,"text":"闭包","layout":null,"note":"1. 闭包其实在 JavaScript 中很常见，它是基于作用域写代码产生的结果。\n\n2. 当函数可以记住并访问所在的词法作用域，即使函数是在当前词法作用域之外执行，这时就产生了闭包。\n\n**作用**\n\n实现模块，模块主要有2个特征：\n\n1.  为创建内部作用域而调用了一个包装函数\n\n2. 包装函数的返回值必须至少包括一个对内部函数的引用"},"children":[]},{"data":{"id":"bugtnol1yi00","created":1559232122852,"text":"this"},"children":[]}]},{"data":{"id":"bugtjgihkuw0","created":1559231791826,"text":"事件","layout":null,"priority":4},"children":[{"data":{"id":"bugtlhxyicg0","created":1559231951666,"text":"冒泡","layout":null},"children":[]},{"data":{"id":"bugtll9wb000","created":1559231958919,"text":"捕获","layout":null},"children":[]},{"data":{"id":"bugtloprez40","created":1559231966408,"text":"模拟事件","layout":null},"children":[]},{"data":{"id":"bugtmgupwc00","created":1559232027658,"text":"事件管理","layout":null},"children":[]}]},{"data":{"id":"bugtmrb30uw0","created":1559232050415,"text":"请求","layout":null,"priority":5},"children":[{"data":{"id":"bugtmutopbk0","created":1559232058070,"text":"ajax ","layout":null},"children":[]},{"data":{"id":"bugtn3glu2w0","created":1559232076871,"text":"promise","layout":null},"children":[]},{"data":{"id":"bugtn6cs0340","created":1559232083169,"text":"fetch","layout":null},"children":[]}]},{"data":{"id":"bugtpxr8f680","created":1559232299545,"text":"跨域"},"children":[]}]},"template":"default","theme":"fresh-blue","version":"1.4.43"}